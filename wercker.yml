box: combient/java-mvn
build:
  steps:
    # generate master   
    - script:
        name: master security settings
        code: echo "<settingsSecurity><master>$MASTER</master></settingsSecurity>" > master.xml
    # Build microservice cache
    - script:
        name: Maven package one-jar
        code: mvn -s settings.xml -Dsettings.security=master.xml package
    - script:
        name: change file mode
        code: chmod +x *.bash
    - script:
        name: clean up
        code: rm master.xml
push:
  steps:
    # Push to public docker repo
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        tag: "1.1"
        repository: $DOCKER_REPOSITORY
        registry: https://index.docker.io/v2/
        #entrypoint: java -Dcoherence.cluster="oracle's cluster" -Dcoherence.cacheconfig=drawingboard-coherence-cache-config.xml -Dcoherence.wka=occs-occs-wkr-1 -Dcoherence.wka2=occs-occs-wkr-2 -Dcoherence.jcache.configuration.classname=passthrough -Dcoherence.distributed.localstorage=false -jar  /pipeline/source/target/drawingboard-micro-coh-ws-1.1-SNAPSHOT-jar-with-dependencies.jar
        entrypoint: java -Dcoherence.cluster="oracle's cluster" -Dcoherence.cacheconfig=drawingboard-coherence-cache-config.xml -Dcoherence.jcache.configuration.classname=passthrough -Dcoherence.distributed.localstorage=false -jar  /pipeline/source/target/drawingboard-micro-coh-ws-1.1-SNAPSHOT-jar-with-dependencies.jar
kubectl-oci:
  steps:
    # execute kubectl command
    - kubectl:
          name: $KUBERNETES_OCI_INSTANCE
          debug: true
          server: $KUBERNETES_MASTER
          token: $KUBERNETES_TOKEN
          insecure-skip-tls-verify: true
          command: set image deployment/ws ws=docker.io/doschkinow/drawingboard-micro-coh-ws:1.1
          
          
